[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SkewX Report",
    "section": "",
    "text": "1 Introduction\nThank you for running SkewX, a Nextflow pipeline for measuring X inactivation skew using genomic long-read data (Oxford Nanopore or Pacbio). If you use these results, please cite our publication:",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>SkewX report</span>"
    ]
  },
  {
    "objectID": "index.html#about-the-report",
    "href": "index.html#about-the-report",
    "title": "SkewX Report",
    "section": "1.1 About the report",
    "text": "1.1 About the report\nIn this report, the results for each individual are presented in individual chapters. In each chapter, you will find four sections:\n\nSequencing QC, which provides information about how the sequencing run went for your sample(s).\nPhasing report, which details how the X chromosome was phased in haplotype blocks and how reads were assigned to each haplotype.\nSkew calculations, which provides the final skew calculation for each individual.\nSkew-based haplotype-scaffolding and per-block skew orientation, which uses the skew to scaffold haplotype blocks into a chromosome-wide haplotype, and can be used to determine if a specific variant is likely on the predominantly active or the predominantly inactive X.\n\nIf you have any questions, you can raise a github issue or contact me at gouil.q@wehi.edu.au",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>SkewX report</span>"
    ]
  },
  {
    "objectID": "mouse_F1_report.html",
    "href": "mouse_F1_report.html",
    "title": "2  mouse_F1",
    "section": "",
    "text": "2.1 QC\nThis is a selection of the most relevant QC plots produced by NanoComp and Mosdepth. Ideally, we should have a minimum of 20X coverage of the X chromosome, with read N50s above 10 kb.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>mouse_F1</span>"
    ]
  },
  {
    "objectID": "mouse_F1_report.html#qc",
    "href": "mouse_F1_report.html#qc",
    "title": "2  mouse_F1",
    "section": "",
    "text": "2.1.1 Sequencing coverage\nFor accurate SNV calling and phasing, we need to have a minimum of 20X coverage (ideally 30-50X) of the X chromosome for the individual (combining all samples, if multiple samples are available for this individual). For accurate methylation clustering, a minimum of 15X coverage per sample is required (so each Xa/Xi cluster has at least 5 reads). The following plot shows the coverage of the X chromosome.\n\n    \n    Mosdepth coverage plot.\n\n\n\n2.1.2 Read statistics\nLonger reads improve haplotype block length and skew orientation. N50s above 10 kb are ideal. The following plots show the read length distribution and N50.\n\n\nRead identity and quality are dependent on the sequencing technology, chemistry version and basecalling model. The plots below allow us to check that the reads match expectations. Discrepancies may indicate a problem with the basecalling (wrong model used), mapping (wrong reference genome) or the sequencing run.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>mouse_F1</span>"
    ]
  },
  {
    "objectID": "mouse_F1_report.html#phasing-report",
    "href": "mouse_F1_report.html#phasing-report",
    "title": "2  mouse_F1",
    "section": "2.2 Phasing Report",
    "text": "2.2 Phasing Report\n\n2.2.1 Number of haplotyped CpG islands\nThis plot shows the cumulative sum of the number of CpG islands that are phased in the individual’s X chromosome. There are 879 CpG islands annotated on the human X chromosome (T2T-CHM13v2 build, UCSC annotation). Large haplotype blocks can cover multiple CpG islands, which helps when counting the number of Xa and Xi reads per haplotype (counts from individual CpG islands can be combined for that haplotype block).\n\n\nCode\n#read in the blocks\ndf &lt;- read_tsv(blocks_stats_file, show_col_types=FALSE)\n\n#read in the CGIs\nCGI &lt;- read_tsv(CGI_bed_file, col_names = c(\"chr\",\"start\",\"end\",\"N_CpG\",\"length\",\"CpGs\",\"extra1\",\"extra2\",\"extra3\",\"extra4\"), show_col_types=FALSE)\n\n#count CpG islands per block.\ndfGR &lt;- as_granges(df, seqnames = chromosome, start = from, end = to)\nCGIGR &lt;- as_granges(CGI, seqnames = chr)\n\ndf$CGI_olaps &lt;- count_overlaps(dfGR, CGIGR)\n\n#cumulative sum:\ndforder &lt;- arrange(df,desc(CGI_olaps)) %&gt;% mutate(rn = row_number())\n\np &lt;- ggplot(dforder, aes(x = rn, y = cumsum(CGI_olaps))) +  geom_step(colour = \"red\") +\n    labs(title = \"\", y = \"haplotyped CGIs\", x = \"haplotype block\") + theme_half_open() + background_grid()\np\n#save_plot(\"mouse_F1_cumulative_plot_CGI_olaps_fig3b.png\",p)\n#save_plot(\"mouse_F1_cumulative_plot_CGI_olaps_fig3b.svg\",p)\n#save_plot(\"mouse_F1_cumulative_plot_CGI_olaps_fig3b.pdf\",p)\n\n\n\n\n\n\n\n\nFigure 2.1: Cumulative sum of haplotyped CpG islands\n\n\n\n\n\n\n\n2.2.2 Haplotype blocks and sizes\nIdeally the whole X could be resolved into two haplotypes (1 block, block size = chromosome size). However repetitive regions or regions of low SNV density that cannot be spanned by long reads break up the haplotype into haplotype blocks. The whatshap report shows the number of SNVs that were found for the individual’s X chromosomes, how many were phased, into how many blocks and which sizes these blocks are.\nPhasing statistics for sample default from file mouse_F1.phased.vcf.gz\n---------------- Chromosome chrX ----------------\n     Variants in VCF:    17315\n        Heterozygous:    15009 (   13325 SNVs)\n              Phased:    13302 (   13302 SNVs)\n            Unphased:     1707 (not considered below)\n          Singletons:        0 (not considered below)\n              Blocks:        2\n\nBlock sizes (no. of variants)\n   Median block size:     6651.00 variants\n  Average block size:     6651.00 variants\n       Largest block:    11855    variants\n      Smallest block:     1447    variants\n\nBlock lengths (basepairs)\n      Sum of lengths:  2609088    bp\n Median block length:  1304544.00 bp\nAverage block length:  1304544.00 bp\n       Longest block:  2376324    bp\n      Shortest block:   232764    bp\n          Block NG50:        0    bp",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>mouse_F1</span>"
    ]
  },
  {
    "objectID": "mouse_F1_report.html#skew-calculations",
    "href": "mouse_F1_report.html#skew-calculations",
    "title": "2  mouse_F1",
    "section": "2.3 Skew calculations",
    "text": "2.3 Skew calculations\nSkew calculations are based on the number of Xa and Xi reads assigned to each haplotype, in each block. These count tables for each sample can be downloaded below.\n\nCode\ntarcmd = paste0(\"tar -hcf\", patient, \"_CGIX_skews.tar\")\nfor (tissue in all_tissues) {\n    CGIX_skewfile = paste(patient, tissue, \"CGIX_skew.tsv.gz\", sep=\"_\")\n    tarcmd = paste(tarcmd, CGIX_skewfile)\n}\nsystem(tarcmd)\n\n Download haplotype block counts by tissue \n\n2.3.1 Number of clustered CpG islands\nThis shows how many of the haplotyped CpG islands could be clustered into Xa and Xi methylation states, and are therefore considered informative for skew calculations.\n\nCode\nnum_clustered_reads &lt;- data.frame()\nfor (tissue in all_tissues) {\n    clustered_reads &lt;- read_tsv(paste(patient, tissue, \"CGIX_clustered_reads.tsv.gz\", sep=\"_\"), show_col_types=FALSE)\n    num_CGIs &lt;- clustered_reads %&gt;%\n        filter(assigned_X %in% c(\"Xa\",\"Xi\")) %&gt;%\n        pull(CGI_id) %&gt;% unique() %&gt;%\n        length()\n    #cat(paste0(tissue, \": \", num_CGIs, \" CGIs haplotyped and clustered as Xa/Xi.\\n\"))\n    num_clustered_reads &lt;- bind_rows(\n        num_clustered_reads,\n        data.frame(tissue = tissue, num_CGIs = num_CGIs)\n    )\n}\n\n# save table\nwrite_tsv(num_clustered_reads, paste0(patient, \"_num_clustered_reads.tsv\"))\n\n# print and format table for report\nnum_clustered_reads %&gt;%\n    gt() %&gt;%\n    opt_interactive(use_highlight = TRUE, use_compact_mode = TRUE) %&gt;% # interactive, highlight rows as you hover over\n    tab_options(ihtml.use_page_size_select = TRUE) %&gt;% # choose page size\n    cols_label(\n        tissue = \"Tissue\",\n        num_CGIs = \"No. of Clustered CpG Islands\"\n    )\n\n\n\n\n\n\n Download this table of numbers of clustered CGIs \n\n\n2.3.2 Maximum likelihood estimate of the skew\nThe maximum likelihood estimate (MLE) of the skew ratio is calculated by fitting a folded binomial distribution to the haplotype block skews. The log-likelihood function is defined as the log of the folded binomial probability mass function, and the skew ratio that maximizes this function is the MLE estimate.\nA sample with perfect balance between the two haplotypes would have a skew ratio of 0.5. A skew of 0.2 would indicate that one haplotype makes 20% of the inactive X chromosomes (20:80 ratio), which is considered a high degree of skew.\n\nCode\n# calculate skews\n# Define the log-likelihood function for folded binomial distribution with varying number of trials\nlog_likelihood &lt;- function(p, x, n) {\n  # Calculate the factor δ(i, j)\n  delta &lt;- ifelse(x == n - x, 1, 0)\n  log_pmf &lt;- log(1 - 0.5*delta) + lchoose(n, x) + log(p^x * (1 - p)^(n-x) + p^(n-x) * (1 - p)^x)\n  return(-sum(log_pmf))  # Negative sum for maximization\n}\n\n#read in the skews\nskews &lt;- data.frame()\nfor (tissue in all_tissues){\n    skew &lt;- read_tsv(paste0(patient, \"_\",tissue,\"_CGIX_skew.tsv.gz\"), show_col_types=FALSE) %&gt;%\n        mutate(successes =  H1_Xa + H2_Xi, trials = H1_Xa + H1_Xi + H2_Xa + H2_Xi) %&gt;%\n        mutate(successes = ifelse(successes &gt; trials/2, trials - successes, successes)) %&gt;%\n        mutate(p = successes/trials)\n    result &lt;- optimise(f = log_likelihood, interval = c(0,0.5), x = skew$successes, n = skew$trials)\n    mle_ratio &lt;- result$minimum\n    skews &lt;- bind_rows(skews, data.frame(patient = patient, tissue = tissue, mle_ratio = mle_ratio))\n}\nwrite_tsv(skews, paste0(patient, \"_skew_ratios.tsv\"))\n\nskews$mle_round &lt;- round(skews$mle_ratio,2)\n# probabilities\n# format table\nskews %&gt;%\n    gt() %&gt;%\n    opt_interactive(use_highlight = TRUE, use_compact_mode = TRUE) %&gt;% # interactive, highlight rows as you hover over\n    tab_options(ihtml.use_page_size_select = TRUE) %&gt;% # choose page size\n    cols_label(\n        patient = \"Patient\",\n        tissue = \"Tissue\",\n        mle_ratio = \"MLE of Skew Ratio\",\n        mle_round = \"MLE of Skew Ratio (rounded)\"\n    )\n\n\n\n\n\n\n Download this table of estimated skews \n\n\n2.3.3 Non-folded and folded distributions of haplotype blocks’ skews\nThe distribution of haplotype block skews can be visualised in several ways. The following plots bin the haplotype block skews in 0.05 intervals and plot the histograms of the skews, weighted by the number of reads supporting the skew. The skews are calculated as the proportion of reads supporting the H1 haplotype being Xa. Because the identity of the H1 haplotype (either maternal or paternal) varies randomly between haplotype blocks, the skew has to be folded around the 0.5 mark (indicated by the dashed line).\n\n\nCode\n#plot the histograms weighted by supporting reads\n#first read all the skews into 1 table. Keep it long\nH1_all &lt;- data.frame()\nfor (tissue in all_tissues){\n    temp &lt;- read_tsv(paste0(patient,\"_\",tissue,\"_CGIX_skew.tsv.gz\"), show_col_types=FALSE) %&gt;%\n        mutate(patient = patient, tissue = tissue, folded_skew = ifelse(H1_Xa_skew &gt; 0.5, 1 - H1_Xa_skew, H1_Xa_skew), reads_in_block = H1_Xa + H2_Xa + H1_Xi + H2_Xi)\n    H1_all &lt;- rbind(H1_all, temp)\n}\n#bin the skews\nH1_all_binned &lt;- H1_all %&gt;%\n    mutate(H1_Xa_skew_bin = cut(H1_Xa_skew, breaks = seq(0, 1, by = 0.05), include.lowest=TRUE)) %&gt;%\n    group_by(tissue, H1_Xa_skew_bin) %&gt;%\n    summarise(reads_in_block_sum = sum(reads_in_block, na.rm = TRUE), .groups = \"drop_last\")\n#now folded\nH1_all_binned2 &lt;- H1_all %&gt;%\n    mutate(folded_skew_bin = cut(folded_skew, breaks = seq(0, 0.5, by = 0.05), include.lowest=TRUE)) %&gt;%\n    group_by(tissue, folded_skew_bin) %&gt;%\n    summarise(reads_in_block_sum = sum(reads_in_block, na.rm = TRUE), .groups = \"drop_last\")\n\n#plot histograms of binned skews with supporting reads, facetting by tissue.\np &lt;- ggplot(H1_all_binned, aes(x = as.numeric(gsub(\"[(\\\\[]\", \"\", gsub(\",.*\", \"\", H1_Xa_skew_bin))), y = reads_in_block_sum)) +\n    geom_bar(stat = \"identity\") +\n    geom_vline(xintercept = 0.5, linetype = \"dashed\") +\n    labs(title = \"Non-folded skew\", x = \"skew\", y = \"supporting reads\") +\n    theme_half_open() +\n    background_grid() +\n    facet_wrap(tissue ~ .)\np\n\n\n\n\n\n\n\n\n\nAlternatively the distribution of haplotype block skews can be plotted as density plots, without weighing by the number of reads.\n\n\nCode\n#plot it as ggridges, without weighing by number of reads\np &lt;- ggplot(H1_all, aes(x = H1_Xa_skew, y = tissue, fill = tissue)) +\n    geom_density_ridges(bandwidth = 0.1) +\n    geom_vline(xintercept = 0.5, linetype = \"dashed\") +\n    labs(title = \"Distribution of haplotype block skews\", x = \"skew\", y = \"tissue\") +\n    theme_half_open() +\n    background_grid() + theme(legend.position = \"none\")\np\n\n\n\n\n\n\n\n\n\nCode\n#now folded\np &lt;- ggplot(H1_all, aes(x = folded_skew, y = tissue, fill = tissue)) +\n    geom_density_ridges(bandwidth = 0.05) +\n    labs(title = \"Folded distribution of haplotype block skews\", x = \"skew\", y = \"tissue\") +\n    theme_half_open() +\n    background_grid() + theme(legend.position = \"none\") +\n    geom_point(data=skews, aes(x = mle_ratio, y = as.numeric(as.factor(tissue)), colour = \"black\")) +\n    geom_text(data=skews, aes(x = Inf, y = as.numeric(as.factor(tissue)), label = mle_round), vjust = -1, hjust = 1)\np\n\n\n\n\n\n\n\n\n\nThe estimated skew is plotted as a point on the folded skew density plot, with the value displayed on the right.\n\n\n2.3.4 Correlation in per-block skew between tissues\nWhen multiple samples are available for an individual, and 2 or more samples show evidence of skew, we might ask whether the skew is for the same haplotype across the samples, or whether it might be “flipped”. If the skew is in a consistent direction (e.g. the maternal allele is preferentially the active X), a given haplotype block will be skewed in the same direction in the two samples. This translates into a positive correlation between haplotype-block skews of the two samples.\n\n\nCode\nfor (tissue in all_tissues) {\n    skew &lt;- read_tsv(paste0(patient,\"_\",tissue,\"_CGIX_skew.tsv.gz\"), show_col_types=FALSE) %&gt;%\n        filter(H1_Xa + H1_Xi + H2_Xa + H2_Xi &gt;= 5) %&gt;%\n        select(PS, H1_Xa_skew) %&gt;%\n        mutate(patient = patient)\n    colnames(skew)[2] &lt;- paste0(\"H1_Xa_skew_\",tissue)\n    if (exists(\"patient_skews\")) {\n        patient_skews &lt;- full_join(patient_skews, skew, by = join_by(PS, patient))\n    } else {\n        patient_skews &lt;- skew\n    }\n}\n\n#pivot longer to get the data in the right format for plotting\n#patient_skews &lt;- patient_skews %&gt;% pivot_longer(cols = starts_with(\"H1_Xa_skew\"), names_to = \"tissue\", values_to = \"H1_Xa_skew\")\n\n#remove \"H1_Xa_skew_\" from the tissue names\n#patient_skews$tissue &lt;- gsub(\"H1_Xa_skew_\",\"\",patient_skews$tissue)\n\n# begin plotting skew correlations with tissues\nif (length(all_tissues)&gt;1) {\n    plot_grid_width = 2\n    numplots = length(all_tissues)*(length(all_tissues)-1)\n    size_all_plots &lt;- ceiling(numplots/plot_grid_width)*plot_grid_width\n    all_plots &lt;- vector(\"list\", size_all_plots)\n    n &lt;- 0\n    for (i in 1:(length(all_tissues)-1)) {\n        tissuei &lt;- all_tissues[[i]]\n        for (j in (i+1):length(all_tissues)) {\n            n &lt;- n + 1\n            tissuej &lt;- all_tissues[[j]]\n            aes_xmap &lt;- sym(paste0(\"H1_Xa_skew_\", tissuei))\n            aes_ymap &lt;- sym(paste0(\"H1_Xa_skew_\", tissuej))\n            title &lt;- paste(\"H1\", tissuei, \"vs\", tissuej)\n            xlabel &lt;- paste(tissuei, \"skew\")\n            ylabel &lt;- paste(tissuej, \"skew\")\n            subp &lt;- ggplot(\n                    patient_skews,\n                    aes(x=!!aes_xmap, y=!!aes_ymap)\n                ) +\n                theme_half_open() +\n                geom_point() +\n                background_grid() +\n                labs(title = title, x = xlabel, y = ylabel) +\n                geom_smooth(method = \"lm\", se = FALSE) +\n                ylim(c(0,1))\n            all_plots[[n]] &lt;- subp\n        }\n    }\n    p &lt;- plot_grid(plotlist=all_plots, ncol=plot_grid_width)\n    p\n    #save_plot(\"H1/H1_skew_correlations_blood_saliva_buccal.png\",p, base_aspect_ratio = 2.7)\n    #save_plot(\"H1/H1_skew_correlations_blood_saliva_buccal.svg\",p, base_aspect_ratio = 2.7)\n    #save_plot(\"H1/H1_skew_correlations_blood_saliva_buccal.pdf\",p, base_aspect_ratio = 2.7)\n} else {\n    cat(\"Only one tissue sample available.\\n\")\n    cat(\"To view skew correlation between tissues, provide multiple samples for this individual.\")\n    plot_grid_width=1\n}\n\n\nOnly one tissue sample available.\nTo view skew correlation between tissues, provide multiple samples for this individual.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>mouse_F1</span>"
    ]
  },
  {
    "objectID": "mouse_F1_report.html#skew-based-haplotype-scaffolding-and-per-block-skew-orientation",
    "href": "mouse_F1_report.html#skew-based-haplotype-scaffolding-and-per-block-skew-orientation",
    "title": "2  mouse_F1",
    "section": "2.4 Skew-based haplotype-scaffolding and per-block skew orientation",
    "text": "2.4 Skew-based haplotype-scaffolding and per-block skew orientation\nWhen a sample is skewed, the haplotype blocks can be scaffolded based on the skew. We can decide to relabel haplotype1/haplotype2 for each haplotype block so that the scaffolded haplotype1 corresponds to the preferentially active X, and is thus consistently either the maternal or paternal allele. Haplotype blocks can be scaffolded if there’s a high degree of certainty for the orientation of the skew in this block. Higher skews and higher read counts in the block lead to higher certainty. The following plots show the log-odds of haplotype1 being the preferential Xa in each haplotype block. Haplotype blocks above the red line at +1 indicate that haplotype1 is over 10 times more likely to be the preferential Xa than haplotype2 in those blocks, and conversely for values below -1.\n\n\nCode\n#plot skews\nall_plots = vector(\"list\", length(all_tissues))\nfor (i in 1:length(all_tissues)) {\n    tissue = all_tissues[[i]]\n    ptissue &lt;- skews[skews$tissue == tissue, \"mle_ratio\"] # get the skew ratio for this tissue\n    skew_tissue &lt;- read_tsv(paste0(patient, \"_\",tissue,\"_CGIX_skew.tsv.gz\"), show_col_types=FALSE) %&gt;%\n        mutate(successes =  H1_Xa + H2_Xi, trials = H1_Xa + H1_Xi + H2_Xa + H2_Xi,folded_p = ifelse(successes &gt; trials/2, 1 - H1_Xa_skew, H1_Xa_skew)) %&gt;%\n        mutate(logodds = (2*successes - trials)*log10(ptissue)+(trials - 2*successes)*log10(1 - ptissue))\n    #write this table to a file\n    write_tsv(skew_tissue, paste0(patient, \"_\",tissue,\"_CGIX_skew_logodds.tsv.gz\"))\n    all_plots[[i]] &lt;- ggplot(skew_tissue, aes(x=trials, y=logodds)) +\n        geom_point() +\n        labs(title = paste(\"H1\", tissue, \"skew\"), x = \"counted reads in block\", y = \"log10 odds of orientation\") +\n        theme_half_open() +\n        background_grid() +\n        geom_hline(yintercept = c(-1,1), colour = \"red\")\n\n}\np &lt;- plot_grid(plotlist=all_plots, ncol=plot_grid_width)\np\n\n\n\n\n\n\n\n\n\nCode\ntarcmd = paste0(\"tar -hcf\", patient, \"_CGIX_skews_logodds.tar\")\nfor (tissue in all_tissues) {\n    CGIX_skewoddsfile = paste(patient, tissue, \"CGIX_skew_logodds.tsv.gz\", sep=\"_\")\n    tarcmd = paste(tarcmd, CGIX_skewoddsfile)\n}\nsystem(tarcmd)\n\n\n Download tables of block skews with logodds of orientation \n\n2.4.1 Is the skew deleterious or protective?\nSkewed X inactivation can be deleterious if a disease-causing variant is on the preferentially active allele, or protective if the variant is on the preferentially inactive allele. This can be determined by finding the haplotype block that contains the variant, checking which haplotype the variant is on, and then checking the skew orientation in that block.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>mouse_F1</span>"
    ]
  }
]